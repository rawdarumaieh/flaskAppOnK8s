name: CI/CD to AWS EKS (Build, Push, Deploy)

on:
  push:
    branches:
      - main 
  workflow_dispatch: # Allowing manual trigger from the GitHub UI

env:
  DOCKER_IMAGE_PATH: rawdarumaieh/flask-app-demo 
  K8S_MANIFESTS_PATH: kubernetes 
  K8S_DEPLOYMENT_NAME: flask-app-deployment

jobs:
  build_and_push:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Docker BuildX
      uses: docker/setup-buildx-action@v3

    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push Docker image
      id: docker_build
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        # Tag with both the unique SHA and 'latest'
        tags: ${{ env.DOCKER_IMAGE_PATH }}:${{ github.sha }}, ${{ env.DOCKER_IMAGE_PATH }}:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max

  deploy:
    needs: build_and_push # no need to run it if build failed
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}
        # setted this to true to ensure AWS CLI v2 is available
        mask-aws-account-id: true 

    - name: Install kubectl
      uses: azure/setup-kubectl@v4
      with:
        version: 'v1.30.0'      
   
    - name: Check AWS CLI Version
      run: aws --version

    - name: Verify CLI tools
      run: |
        aws --version
        which aws
        kubectl version --client

    
    - name: Update Kubeconfig

      run: aws eks update-kubeconfig --name ${{ secrets.EKS_CLUSTER_NAME }} --region ${{ secrets.AWS_REGION }}                  

    - name: Update Deployment Image
      run: |
        NEW_IMAGE_TAG="${{ env.DOCKER_IMAGE_PATH }}:${{ github.sha }}"
        kubectl set image deployment/${{ env.K8S_DEPLOYMENT_NAME }} flask-app-container=${NEW_IMAGE_TAG} --record
        
    
    - name: Apply for Monitoring and Service Definitions
      run: kubectl apply -f ${{ env.K8S_MANIFESTS_PATH }}/
      
    - name: Rollout Status Check
      run: kubectl rollout status deployment/${{ env.K8S_DEPLOYMENT_NAME }} --timeout=5m

